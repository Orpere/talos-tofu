apiVersion: apps/v1
kind: Deployment
metadata:
  name: mylab-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mylab-nginx
  template:
    metadata:
      labels:
        app: mylab-nginx
    spec:
      securityContext:
        runAsUser: 101
        runAsGroup: 101
        runAsNonRoot: true
      containers:
      - name: nginx
        image: nginx:alpine
        resources:
          requests:
            cpu: "100m"
            memory: "64Mi"
          limits:
            cpu: "250m"
            memory: "128Mi"
        volumeMounts:
          - name: html
            mountPath: /usr/share/nginx/html/index.html
            subPath: index.html
          - name: nginx-cache
            mountPath: /var/cache/nginx
          - name: nginx-run
            mountPath: /var/run/nginx
          - name: run
            mountPath: /run
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
      volumes:
        - name: html
          configMap:
            name: mylab-page
        - name: nginx-cache
          emptyDir: {}
        - name: nginx-run
          emptyDir: {}
        - name: run
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: mylab-nginx
spec:
  selector:
    app: mylab-nginx
  ports:
    - port: 80
      targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mylab-nginx
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - mylac.orp-dev.eu
      secretName: mylab-nginx-tls
  rules:
    - host: mylac.orp-dev.eu
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: mylab-nginx
                port:
                  number: 80